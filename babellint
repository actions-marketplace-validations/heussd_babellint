#!/bin/bash
set -o errexit
set -o pipefail
set -o nounset


function print {
    echo -e "\033[0;34m[babellint]\033[0m $1"
}
function printerr {
    print "\033[0;31m𐄂 $1 \033[0m"
}
function printok {
    print "✓ $1"
}

function fail {
    printerr "$1"
    exit 1
}


if [ $# -eq 0 ]; then
    # Do explicit file provided. List files myself and call self with each.
    print "Linting $PWD..."

    GITOPTS="--git-dir=.git"
    if [[ -e "$(pwd)/.dotfiles-bare-repo/" ]]; then
        GITOPTS="--git-dir=.dotfiles-bare-repo/"
    fi

    git "$GITOPTS" ls-files | tr "\n" "\0" | xargs -I {} -0 bash -c "$0 \"{}\"" || fail "Linting errors in $PWD"
    exit
fi


for file in "$@"; do
    # In sparse repositories, some files might be listed but not exist. Skip these.
    if [[ ! -e "$file" ]]; then
        continue
    fi

    trap "fail $file" ERR # VS Code is wrong here, don't use single quotes!

    # Casing should not matter
    pattern=$(echo "$file" | tr '[:upper:]' '[:lower:]')

    case "$pattern" in
        dockerfile)
            hadolint "$file" --ignore DL3059
            ;;
        readme.md)
            if [[ -e ".wordlist.txt" ]]; then
                cp ".wordlist.txt" /root/wordlist.txt
            fi

            # Assume that the current folder is a valid proper name
            folder=${PWD##*/}
            echo "$folder" >> /root/wordlist.txt

            pyspelling --config /root/pyspelling-readme-md.yml --name "Readme.md" --source "$file" | head -n -1
            ;& # Yes, fall through please
        *.md)
            markdownlint --fix  "$file"
            ;;
        *.json)
            jq . "$file" > /dev/null

            base=$(jq . "$file")
            reformatted=$(jq . "$file" -S)
            if [[ "$base" != "$reformatted" ]]; then
                printf "%s" "$reformatted" > "$file"
            fi
            ;;
        *.yaml)
            ;&
        *.yml)
            yamllint "$file"
            ;;
        *)
            exit 0
            ;;
    esac

    printok "$file"
done

